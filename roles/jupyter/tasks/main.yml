---
- name: Установить необходимые пакеты
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
    update_cache: yes

- name: Установить Jupyter Notebook и jupyter в виртуальное окружение
  pip:
    name:
      - notebook
      - jupyter
    virtualenv: "{{ jupyter_venv }}"

- name: Сгенерировать хэш пароля Jupyter
  command: "{{ jupyter_venv }}/bin/python -c 'from notebook.auth import passwd; print(passwd(\"{{ jupyter_password }}\"))'"
  register: jupyter_password_hash
  changed_when: false

- name: Создать директорию для Jupyter
  file:  
    path: "{{ jupyter_home }}"
    state: directory
    mode: '0770'
    owner: "{{ jupyter_user }}"
    group: "{{ jupyter_user }}"


- name: Создать директорию для конфигурации Jupyter
  file:
    path: "{{ jupyter_home }}/.jupyter"
    state: directory
    mode: '0700'
    owner: "{{ jupyter_user }}"
    group: "{{ jupyter_user }}"

- name: Создать конфиг-файл Jupyter с паролем и настройками
  copy:
    dest: "{{ jupyter_home }}/.jupyter/jupyter_notebook_config.py"
    content: |
      c = get_config()
      c.NotebookApp.password = u'{{ jupyter_password_hash.stdout }}'
      c.NotebookApp.ip = '0.0.0.0'
      c.NotebookApp.open_browser = False
      c.NotebookApp.port = {{ jupyter_port }}
    mode: '0600'
    owner: "{{ jupyter_user }}"
    group: "{{ jupyter_user }}"

- name: Создать systemd unit файл для Jupyter Notebook
  copy:
    dest: /etc/systemd/system/jupyter.service
    content: |
      [Unit]
      Description=Jupyter Notebook Server
      After=network.target

      [Service]
      Type=simple
      User={{ jupyter_user }}
      Group={{ jupyter_user }}
      WorkingDirectory={{ jupyter_home }}
      ExecStart={{ jupyter_venv }}/bin/python -m notebook --config={{ jupyter_home }}/.jupyter/jupyter_notebook_config.py
      Restart=always
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
    mode: '0644'

- name: Включить и запустить сервис Jupyter
  systemd:
    name: jupyter.service
    enabled: yes
    state: started
    daemon_reload: true

- name: Открыть порт {{ jupyter_port }} в ufw (если ufw установлен)
  when: "'ufw' in ansible_facts.packages"
  ufw:
    rule: allow
    port: "{{ jupyter_port }}"
    proto: tcp
