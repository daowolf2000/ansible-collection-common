---
- name: Create user for ollama
  ansible.builtin.include_role:
    name: daowolf2000.linux.users
  vars:
    users_host:
        ollama:
          uid: "{{ ollama_user_uid }}"
          gid: "{{ ollama_user_gid }}"
          password: "!"
          shell: /bin/false
          home: "{{ ollama_homedir }}"

- name: Set owner for ollama home
  ansible.builtin.file:
    path: "{{ ollama_homedir }}"
    state: directory
    owner: "{{ ollama_user_uid }}"
    group: "{{ ollama_user_gid }}"
    recurse: true

- name: Check exists installed Ollama
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - /usr/local/bin/ollama
    - /usr/local/lib/ollama
    - /usr/share/ollama
  register: path_results

- name: Install Ollama
  when: path_results.results | map(attribute='stat.exists') | select('equalto', true) | list | length == 0 or ollama_force
  ansible.builtin.shell:
    cmd: >-
      {% if ollama_version is defined and ollama_version != omit %}
        set -o pipefail ; curl -fsSL https://ollama.com/install.sh | OLLAMA_VERSION="{{ ollama_version }}" sh
      {% else %}
        set -o pipefail ; curl -fsSL https://ollama.com/install.sh | sh
      {% endif %}
  args:
    executable: /bin/bash
  changed_when: true


- name: Create directory for override.conf
  ansible.builtin.file:
    path: /etc/systemd/system/ollama.service.d
    state: directory
    mode: '0755'

- name: Configure override.conf for ollama.service (with environment)
  ansible.builtin.copy:
    dest: /etc/systemd/system/ollama.service.d/override.conf
    mode: '0644'
    owner: root
    group: root
    content: |
      [Service]
      {% for line in ollama_env_vars %}
      {{ line }}
      {% endfor %}
  vars:
    ollama_env_vars: >-
      {{
        ollama_env.split('\n')
        | select('match', '^[^#].*=.*$')
        | map('regex_replace', '^(.*)$', 'Environment="\1"')
        | list
      }}
  notify: Restart ollama

