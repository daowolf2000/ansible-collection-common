---
- name: Create folder for models
  ansible.builtin.file:
    path: "{{ ollama_models }}"
    state: directory
    owner: "{{ ollama_user }}"
    group: "{{ ollama_user }}"
    mode: 0775
  tags: [ install ]

- name: Check exists installed Ollama
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - /usr/local/bin/ollama
    - /usr/local/lib/ollama
    - /usr/share/ollama
  register: path_results
  tags: [ install, update ]

- name: Install Ollama
  when: path_results.results | map(attribute='stat.exists') | select('equalto', true) | list | length == 0 or ollama_force
  ansible.builtin.shell:
    cmd: >-
      {% if ollama_version is defined and ollama_version != omit %}
        set -o pipefail ; curl -fsSL https://ollama.com/install.sh | OLLAMA_VERSION="{{ ollama_version }}" sh
      {% else %}
        set -o pipefail ; curl -fsSL https://ollama.com/install.sh | sh
      {% endif %}
  args:
    executable: /bin/bash
  changed_when: true
  tags: [ install, update ]
  
- name: Create directory for override.conf
  ansible.builtin.file:
    path: /etc/systemd/system/ollama.service.d
    state: directory
    mode: '0755'
  tags: [ install, config ]

- name: Configure override.conf for ollama.service (with environment)
  ansible.builtin.copy:
    dest: /etc/systemd/system/ollama.service.d/override.conf
    mode: '0644'
    owner: root
    group: root
    content: |
      [Service]
      {% for line in ollama_env %}
      Environment="{{ line }}"
      {% endfor %}
  notify: Restart ollama
  tags: [ install, config ]

